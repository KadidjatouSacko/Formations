<!-- app/views/error.ejs -->
<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title || 'Erreur - FormaPro+' %></title>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        :root {
            --primary-pink: #d4a5a5;
            --primary-blue: #a5c9d4;
            --soft-gray: #f8f9fa;
            --text-dark: #4a4a4a;
            --text-light: #8a8a8a;
            --white: #ffffff;
            --error: #dc3545;
            --warning: #ffc107;
            --gradient-contact: linear-gradient(135deg, #d4a5a5, #a5c9d4);
        }

        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
            line-height: 1.6;
            color: var(--text-dark);
            background: var(--soft-gray);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 2rem;
        }

        .error-container {
            background: var(--white);
            border-radius: 25px;
            padding: 3rem;
            max-width: 600px;
            width: 100%;
            text-align: center;
            box-shadow: 0 15px 50px rgba(0,0,0,0.08);
            animation: fadeInUp 0.6s ease;
        }

        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .error-icon {
            font-size: 4rem;
            margin-bottom: 2rem;
            animation: pulse 2s infinite;
        }

        @keyframes pulse {
            0%, 100% { transform: scale(1); }
            50% { transform: scale(1.1); }
        }

        .error-status {
            font-size: 3rem;
            font-weight: 700;
            background: var(--gradient-contact);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            margin-bottom: 1rem;
        }

        .error-message {
            font-size: 1.5rem;
            font-weight: 600;
            color: var(--text-dark);
            margin-bottom: 1rem;
        }

        .error-description {
            color: var(--text-light);
            margin-bottom: 2rem;
            line-height: 1.8;
        }

        .error-actions {
            display: flex;
            gap: 1rem;
            justify-content: center;
            flex-wrap: wrap;
            margin-top: 2rem;
        }

        .btn {
            padding: 1rem 2rem;
            border: none;
            border-radius: 15px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            font-size: 1rem;
        }

        .btn-primary {
            background: var(--gradient-contact);
            color: white;
            box-shadow: 0 5px 15px rgba(212, 165, 165, 0.3);
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(212, 165, 165, 0.4);
        }

        .btn-secondary {
            background: var(--soft-gray);
            color: var(--text-dark);
        }

        .btn-secondary:hover {
            background: var(--primary-blue);
            color: white;
        }

        .error-details {
            margin-top: 3rem;
            padding: 2rem;
            background: var(--soft-gray);
            border-radius: 15px;
            text-align: left;
            font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;
            font-size: 0.9rem;
            display: none;
        }

        .error-details.show {
            display: block;
            animation: slideDown 0.3s ease;
        }

        @keyframes slideDown {
            from {
                opacity: 0;
                max-height: 0;
            }
            to {
                opacity: 1;
                max-height: 500px;
            }
        }

        .toggle-details {
            background: none;
            border: none;
            color: var(--primary-blue);
            cursor: pointer;
            text-decoration: underline;
            font-size: 0.9rem;
            margin-top: 1rem;
        }

        .logo {
            position: absolute;
            top: 2rem;
            left: 2rem;
            display: flex;
            align-items: center;
            gap: 0.8rem;
            text-decoration: none;
        }

        .logo-icon {
            width: 40px;
            height: 40px;
            background: var(--gradient-contact);
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: 700;
            font-size: 1.2rem;
        }

        .logo-text {
            font-weight: 700;
            font-size: 1.5rem;
        }

        .forma {
            color: var(--primary-pink);
        }

        .pro {
            color: var(--primary-blue);
        }

        @media (max-width: 768px) {
            .logo {
                position: static;
                justify-content: center;
                margin-bottom: 2rem;
            }

            .error-container {
                padding: 2rem;
            }

            .error-actions {
                flex-direction: column;
            }
        }
    </style>
</head>
<body>
    <a href="/" class="logo">
        <div class="logo-icon">P+</div>
        <div class="logo-text">
            <span class="forma">FORMA</span><span class="pro">PRO+</span>
        </div>
    </a>

    <div class="error-container">
        <div class="error-icon">
            <% if (error && error.status == 404) { %>
                üîç
            <% } else if (error && error.status >= 500) { %>
                ‚ö†Ô∏è
            <% } else if (error && error.status == 403) { %>
                üîí
            <% } else { %>
                ‚ùå
            <% } %>
        </div>

        <div class="error-status">
            <%= error && error.status ? error.status : '500' %>
        </div>

        <h1 class="error-message">
            <% if (error && error.status == 404) { %>
                Page non trouv√©e
            <% } else if (error && error.status >= 500) { %>
                Erreur serveur
            <% } else if (error && error.status == 403) { %>
                Acc√®s interdit
            <% } else { %>
                Une erreur s'est produite
            <% } %>
        </h1>

        <p class="error-description">
            <% if (error && error.message) { %>
                <%= error.message %>
            <% } else if (error && error.status == 404) { %>
                La page que vous recherchez n'existe pas ou a √©t√© d√©plac√©e.
            <% } else if (error && error.status >= 500) { %>
                Nous rencontrons des difficult√©s techniques temporaires.
            <% } else { %>
                Une erreur inattendue s'est produite. Veuillez r√©essayer.
            <% } %>
        </p>

        <div class="error-actions">
            <a href="/" class="btn btn-primary">
                üè† Retour √† l'accueil
            </a>
            <a href="/catalogue" class="btn btn-secondary">
                üìö Voir le catalogue
            </a>
            <button onclick="history.back()" class="btn btn-secondary">
                ‚Üê Page pr√©c√©dente
            </button>
        </div>

        <% if (process.env.NODE_ENV === 'development' && error && error.stack) { %>
            <button class="toggle-details" onclick="toggleDetails()">
                üîç Afficher les d√©tails techniques
            </button>
            
            <div class="error-details" id="errorDetails">
                <h3>D√©tails de l'erreur :</h3>
                <p><strong>URL:</strong> <%= error.method || 'N/A' %> <%= error.url || 'N/A' %></p>
                <p><strong>Timestamp:</strong> <%= error.timestamp || new Date().toISOString() %></p>
                <p><strong>Message:</strong> <%= error.message || 'Aucun message' %></p>
                <% if (error.stack) { %>
                    <h4>Stack trace :</h4>
                    <pre><%= error.stack %></pre>
                <% } %>
            </div>
        <% } %>
    </div>

    <script>
        function toggleDetails() {
            const details = document.getElementById('errorDetails');
            const button = document.querySelector('.toggle-details');
            
            if (details.classList.contains('show')) {
                details.classList.remove('show');
                button.textContent = 'üîç Afficher les d√©tails techniques';
            } else {
                details.classList.add('show');
                button.textContent = 'üìÅ Masquer les d√©tails techniques';
            }
        }

        // Auto-refresh en cas d'erreur 500
        <% if (error && error.status >= 500) { %>
            let countdown = 30;
            const refreshBtn = document.createElement('button');
            refreshBtn.className = 'btn btn-secondary';
            refreshBtn.style.marginTop = '1rem';
            refreshBtn.innerHTML = `üîÑ Actualiser dans ${countdown}s`;
            refreshBtn.onclick = () => window.location.reload();
            
            document.querySelector('.error-actions').appendChild(refreshBtn);
            
            const interval = setInterval(() => {
                countdown--;
                refreshBtn.innerHTML = `üîÑ Actualiser dans ${countdown}s`;
                
                if (countdown <= 0) {
                    clearInterval(interval);
                    window.location.reload();
                }
            }, 1000);
        <% } %>
    </script>
</body>
</html><!-- app/views/error.ejs -->
<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title || 'Erreur - FormaPro+' %></title>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        :root {
            --primary-pink: #d4a5a5;
            --primary-blue: #a5c9d4;
            --soft-gray: #f8f9fa;
            --text-dark: #4a4a4a;
            --text-light: #8a8a8a;
            --white: #ffffff;
            --error: #dc3545;
            --warning: #ffc107;
            --gradient-contact: linear-gradient(135deg, #d4a5a5, #a5c9d4);
        }

        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
            line-height: 1.6;
            color: var(--text-dark);
            background: var(--soft-gray);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 2rem;
        }

        .error-container {
            background: var(--white);
            border-radius: 25px;
            padding: 3rem;
            max-width: 600px;
            width: 100%;
            text-align: center;
            box-shadow: 0 15px 50px rgba(0,0,0,0.08);
            animation: fadeInUp 0.6s ease;
        }

        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .error-icon {
            font-size: 4rem;
            margin-bottom: 2rem;
            animation: pulse 2s infinite;
        }

        @keyframes pulse {
            0%, 100% { transform: scale(1); }
            50% { transform: scale(1.1); }
        }

        .error-status {
            font-size: 3rem;
            font-weight: 700;
            background: var(--gradient-contact);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            margin-bottom: 1rem;
        }

        .error-message {
            font-size: 1.5rem;
            font-weight: 600;
            color: var(--text-dark);
            margin-bottom: 1rem;
        }

        .error-description {
            color: var(--text-light);
            margin-bottom: 2rem;
            line-height: 1.8;
        }

        .error-actions {
            display: flex;
            gap: 1rem;
            justify-content: center;
            flex-wrap: wrap;
            margin-top: 2rem;
        }

        .btn {
            padding: 1rem 2rem;
            border: none;
            border-radius: 15px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            font-size: 1rem;
        }

        .btn-primary {
            background: var(--gradient-contact);
            color: white;
            box-shadow: 0 5px 15px rgba(212, 165, 165, 0.3);
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(212, 165, 165, 0.4);
        }

        .btn-secondary {
            background: var(--soft-gray);
            color: var(--text-dark);
        }

        .btn-secondary:hover {
            background: var(--primary-blue);
            color: white;
        }

        .error-details {
            margin-top: 3rem;
            padding: 2rem;
            background: var(--soft-gray);
            border-radius: 15px;
            text-align: left;
            font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;
            font-size: 0.9rem;
            display: none;
        }

        .error-details.show {
            display: block;
            animation: slideDown 0.3s ease;
        }

        @keyframes slideDown {
            from {
                opacity: 0;
                max-height: 0;
            }
            to {
                opacity: 1;
                max-height: 500px;
            }
        }

        .toggle-details {
            background: none;
            border: none;
            color: var(--primary-blue);
            cursor: pointer;
            text-decoration: underline;
            font-size: 0.9rem;
            margin-top: 1rem;
        }

        .logo {
            position: absolute;
            top: 2rem;
            left: 2rem;
            display: flex;
            align-items: center;
            gap: 0.8rem;
            text-decoration: none;
        }

        .logo-icon {
            width: 40px;
            height: 40px;
            background: var(--gradient-contact);
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: 700;
            font-size: 1.2rem;
        }

        .logo-text {
            font-weight: 700;
            font-size: 1.5rem;
        }

        .forma {
            color: var(--primary-pink);
        }

        .pro {
            color: var(--primary-blue);
        }

        @media (max-width: 768px) {
            .logo {
                position: static;
                justify-content: center;
                margin-bottom: 2rem;
            }

            .error-container {
                padding: 2rem;
            }

            .error-actions {
                flex-direction: column;
            }
        }
    </style>
</head>
<body>
    <a href="/" class="logo">
        <div class="logo-icon">A+</div>
        <div class="logo-text">
            <span class="forma">AD</span><span class="pro">SIAM</span>
        </div>
    </a>

    <div class="error-container">
        <div class="error-icon">
            <% if (error && error.status == 404) { %>
                üîç
            <% } else if (error && error.status >= 500) { %>
                ‚ö†Ô∏è
            <% } else if (error && error.status == 403) { %>
                üîí
            <% } else { %>
                ‚ùå
            <% } %>
        </div>

        <div class="error-status">
            <%= error && error.status ? error.status : '500' %>
        </div>

        <h1 class="error-message">
            <% if (error && error.status == 404) { %>
                Page non trouv√©e
            <% } else if (error && error.status >= 500) { %>
                Erreur serveur
            <% } else if (error && error.status == 403) { %>
                Acc√®s interdit
            <% } else { %>
                Une erreur s'est produite
            <% } %>
        </h1>

        <p class="error-description">
            <% if (error && error.message) { %>
                <%= error.message %>
            <% } else if (error && error.status == 404) { %>
                La page que vous recherchez n'existe pas ou a √©t√© d√©plac√©e.
            <% } else if (error && error.status >= 500) { %>
                Nous rencontrons des difficult√©s techniques temporaires.
            <% } else { %>
                Une erreur inattendue s'est produite. Veuillez r√©essayer.
            <% } %>
        </p>

        <div class="error-actions">
            <a href="/" class="btn btn-primary">
                üè† Retour √† l'accueil
            </a>
            <a href="/catalogue" class="btn btn-secondary">
                üìö Voir le catalogue
            </a>
            <button onclick="history.back()" class="btn btn-secondary">
                ‚Üê Page pr√©c√©dente
            </button>
        </div>

        <% if (process.env.NODE_ENV === 'development' && error && error.stack) { %>
            <button class="toggle-details" onclick="toggleDetails()">
                üîç Afficher les d√©tails techniques
            </button>
            
            <div class="error-details" id="errorDetails">
                <h3>D√©tails de l'erreur :</h3>
                <p><strong>URL:</strong> <%= error.method || 'N/A' %> <%= error.url || 'N/A' %></p>
                <p><strong>Timestamp:</strong> <%= error.timestamp || new Date().toISOString() %></p>
                <p><strong>Message:</strong> <%= error.message || 'Aucun message' %></p>
                <% if (error.stack) { %>
                    <h4>Stack trace :</h4>
                    <pre><%= error.stack %></pre>
                <% } %>
            </div>
        <% } %>
    </div>

    <script>
        function toggleDetails() {
            const details = document.getElementById('errorDetails');
            const button = document.querySelector('.toggle-details');
            
            if (details.classList.contains('show')) {
                details.classList.remove('show');
                button.textContent = 'üîç Afficher les d√©tails techniques';
            } else {
                details.classList.add('show');
                button.textContent = 'üìÅ Masquer les d√©tails techniques';
            }
        }

        // Auto-refresh en cas d'erreur 500
        <% if (error && error.status >= 500) { %>
            let countdown = 30;
            const refreshBtn = document.createElement('button');
            refreshBtn.className = 'btn btn-secondary';
            refreshBtn.style.marginTop = '1rem';
            refreshBtn.innerHTML = `üîÑ Actualiser dans ${countdown}s`;
            refreshBtn.onclick = () => window.location.reload();
            
            document.querySelector('.error-actions').appendChild(refreshBtn);
            
            const interval = setInterval(() => {
                countdown--;
                refreshBtn.innerHTML = `üîÑ Actualiser dans ${countdown}s`;
                
                if (countdown <= 0) {
                    clearInterval(interval);
                    window.location.reload();
                }
            }, 1000);
        <% } %>
    </script>
</body>
</html>